openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://localhost:5000
    description: back-end
  - url: http://localhost:3000
    description: front-end
  
paths:
  /users/getAllUsers/:
    get:
      summary: Returns a list of users.
      tags: [User]
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
               $ref: '#/components/schemas/User'
    
    post:
      summary: adds a new record
      tags: [User]
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: created
        '400':
          description: error


  

  /users/{userId}:
    get:
      summary: Returns a particular user
      tags: [User]
      parameters: 
        - name: userId
          in: path
          required: true
          description: autogenerated user id 
          schema:
            type: string
      responses: 
        '200':
          description: OK
        '400':
          description: Couldn't find it
        '500':
          description: Cast to ObjectId failed for value
    
    delete:
      summary: deletes a user
      tags: [User]
      parameters:
        - name: userId
          in: path
          required: true
          description: autogenerated userid by mongo
          schema:
            type: string
      responses:
        '200':
          description: Deleted
        '400':
          description: does not exist
        '500':
          description: error

  # /users/:
    


  /class/getAllClasses/:
    get:
      summary: Returns a list of classes.
      tags: [Class]
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Class'
    
    post:
      summary: add a class
      tags: [Class]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Class'
      responses:
        '200':
          description: created
        '400':
          description: error



  /class/{classId}:
    get:
      summary: particular class
      tags: [Class]
      description: something
      parameters:
        - name: classId
          in: path
          required: true
          description: autogenerated class id 
          schema: 
            type: string
      responses:
        '200':
          description: classinfo
        '400':
          description: Couldn't find it
        '500':
          description: Cast to classId failed for value

    delete:
        summary: deletes a class
        tags: [Class]
        parameters:
          - name: classId
            in: path
            required: true
            description: autogenrated classid
            schema: 
              type: string
        responses:
          '200':
            description: Deleted the class
          '400':
            description: not available in databse
          '500':
            description: error
      


  
  /classwork/getAllClassworks:
    get:
      summary: Returns a list of classworks assigned.
      tags: [Classwork]
      description: Optional extended description in CommonMark or HTML.
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

    post:
      summary: add a classwork
      tags: [Classwork]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classwork'
      responses:
        '200':
          description: created classwork
        '400':
          description: error




components:
  schemas:
    User:
      type: object
      required: 
        - username
        - password
        - email
        - token

      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        token:
          type: string
        
    Class:
      type: object
      required: 
        - title
        - description
        - archived
        - teacher
        - students
        - owner
        - code

      properties:
        title:
          type: string
        description:
          type: string
        archived:
          type: boolean
          items: 
            type: string
        teacher:
          type: array
          items: 
            type: string
        students:
          type: array
          items: 
            type: string
        owner:
          type: string
        code:
          type: string

    Classwork:
      type: object
      required: 
        - title
        - description
        - class
        - author
        - types

      properties:
        title:
          type: string
        description:
          type: string
        class:
          type: object
          properties:
            id:
              type: string  
        author:
          type: object
          properties:
            id:
              type: string
        types:
          type: string
          enum: ['material', 'short answer', 'long answer', 'multiple choice', 'checkbox']
        answer:
          type: array
          items:
            type: string
        duedate:
          type: date
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
        options:
          type: array
          items:
            type: string
        